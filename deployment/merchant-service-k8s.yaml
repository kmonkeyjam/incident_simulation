# Configuration for Fix: Cache invalidation bug in merchant data service
# **Critical Bug Report** - Ticket #BUG-2024-0892

**Issue**: Merchant profile updates not invalidating Redis cache, causing stale data in payment flows:
- Merchants updating bank account info seeing old account in checkout
- Fee schedule changes taking up to 1 hour to take effect
- 23 customer support tickets in past 48 hours

**Root Cause**: Cache invalidation logic in `MerchantService.updateProfile()` only clearing local cache, not distributed Redis cache keys.

**Fix Details**:
- Added Redis PUBLISH to `merchant:profile:updated:{merchant_id}` channel
- All service instances subscribe and invalidate relevant cache keys
- Implemented cache versioning to handle race conditions
- Added fallback: cache entries auto-expire after 30 minutes

**Testing**:
- Manual verification: merchant profile updates reflect immediately
- Load test: 100 concurrent profile updates with cache validation
- Regression test added to CI pipeline

**Monitoring**: Added `cache_invalidation_events` metric to track successful invalidations


version: '1.0'
metadata:
  name: fix:-cache-invalidation-bug-in-merchant-data-service
  pr_id: 1
  created_at: "2025-09-15T16:19:42.944166"

settings:
  enabled: true
  timeout: 30
  retry_count: 3
  
features:
  - name: "enhanced_processing"
    enabled: true
    config:
      batch_size: 100
      parallel: true
  
  - name: "monitoring"
    enabled: true
    config:
      metrics_interval: 60
      log_level: "info"

database:
  pool_size: 10
  connection_timeout: 5000
  retry_attempts: 3

cache:
  enabled: true
  ttl: 300
  max_size: 1000
