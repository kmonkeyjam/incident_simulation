# Configuration for Feature: Advanced fraud detection with ML models
# **Business Driver**: Current rule-based fraud detection has 12% false positive rate, blocking $500K/month in legitimate transactions. Need ML-based approach.

**ML Models Implemented**:
- **Transaction Scoring**: XGBoost model trained on 2M+ historical transactions
  - Features: amount, merchant category, time patterns, geo-location, device fingerprint
  - ROC-AUC: 0.94 on test set (vs 0.78 for current rules)
- **Behavioral Analysis**: Isolation Forest for anomaly detection
  - Tracks user spending patterns, velocity, device changes
  - Flags deviations >3 standard deviations from user baseline

**Real-time Inference**:
- Model serving via TensorFlow Serving (99th percentile <15ms)
- Feature store integration for real-time feature computation
- A/B testing framework to compare against existing rules

**Risk Scoring**:
- 0-100 risk score (0=safe, 100=definitely fraud)
- Configurable thresholds per merchant risk tolerance:
  - Low risk merchants: block >85
  - High risk merchants: block >60
  - Manual review queue: 40-threshold

**Model Operations**:
- Daily model retraining pipeline
- Feature drift monitoring and alerts
- Model performance tracking (precision/recall/f1)
- Shadow mode deployment for 2 weeks before activation

**Expected Results**: 60% reduction in false positives, 25% improvement in fraud catch rate


version: '1.0'
metadata:
  name: feature:-advanced-fraud-detection-with-ml-models
  pr_id: 1
  created_at: "2025-08-11T15:10:59.272457"

settings:
  enabled: true
  timeout: 30
  retry_count: 3
  
features:
  - name: "enhanced_processing"
    enabled: true
    config:
      batch_size: 100
      parallel: true
  
  - name: "monitoring"
    enabled: true
    config:
      metrics_interval: 60
      log_level: "info"

database:
  pool_size: 10
  connection_timeout: 5000
  retry_attempts: 3

cache:
  enabled: true
  ttl: 300
  max_size: 1000
